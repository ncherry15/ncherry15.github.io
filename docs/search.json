[
  {
    "objectID": "posts/first-post/index.html",
    "href": "posts/first-post/index.html",
    "title": "Changes With the Big Ten’s Offense",
    "section": "",
    "text": "Headline: Big Ten Teams Are Running More Plays Per Game After the NCAA’s Clock Rule Change\nThe NCAA’s 2024 rule change to keep the clock running after first downs was designed to speed up games. To see whether that actually reduced the number of offensive plays, I compared the average number of plays per game for each Big Ten team across the 2024-25 and 2025-26 seasons.\nFirst I loaded the tidyverse package and imported game-by-game statistics for the 2024 and 2025 college football seasons from two CSV files.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nseason24 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\n\n\nRows: 1717 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (11): Location, Opponent, Result, OT, Bowl.x, TeamURL, Outcome, Bowl.y,...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nseason25 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs25.csv\")\n\n\nRows: 711 Columns: 77\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): Location, Opponent, Result, OT, TeamURL, Outcome, Team, Conferenc...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nTo focus the analysis on the Big Ten, I created a list of all 18 current conference teams. Then, I filtered the 2024 and 2025 season data to include only games played by Big Ten teams.\n\n\nCode\nbig_ten_teams &lt;- c(\"Oregon\", \"Indiana\", \"Penn State\", \"Ohio State\", \"Illinois\", \"Iowa\",  \"Michigan\",  \"Minnesota\", \"Rutgers\", \"USC\", \"Washington\", \"Nebraska\", \"Michigan State\", \"UCLA\", \"Wisconsin\", \"Northwestern\",\"Maryland\", \"Purdue\")\n\nseason24 %&gt;%\n  filter(Team %in% big_ten_teams)\n\n\n# A tibble: 235 × 79\n      Rk   Gtm Date       Location Opponent       Result Points PointsOpp OT   \n   &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;   &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;\n 1     1     1 2024-08-31 &lt;NA&gt;     Idaho          W          24        14 &lt;NA&gt; \n 2     2     2 2024-09-07 &lt;NA&gt;     Boise State    W          37        34 &lt;NA&gt; \n 3     3     3 2024-09-14 @        Oregon State   W          49        14 &lt;NA&gt; \n 4     4     4 2024-09-28 @        UCLA           W          34        13 &lt;NA&gt; \n 5     5     5 2024-10-04 &lt;NA&gt;     Michigan State W          31        10 &lt;NA&gt; \n 6     6     6 2024-10-12 &lt;NA&gt;     Ohio State     W          32        31 &lt;NA&gt; \n 7     7     7 2024-10-18 @        Purdue         W          35         0 &lt;NA&gt; \n 8     8     8 2024-10-26 &lt;NA&gt;     Illinois       W          38         9 &lt;NA&gt; \n 9     9     9 2024-11-02 @        Michigan       W          38        17 &lt;NA&gt; \n10    10    10 2024-11-09 &lt;NA&gt;     Maryland       W          39        18 &lt;NA&gt; \n# ℹ 225 more rows\n# ℹ 70 more variables: PassCmp &lt;dbl&gt;, PassAtt &lt;dbl&gt;, PassPct &lt;dbl&gt;,\n#   PassYds &lt;dbl&gt;, PassTD &lt;dbl&gt;, PassYA &lt;dbl&gt;, PassAYA &lt;dbl&gt;, PassRate &lt;dbl&gt;,\n#   RushAtt &lt;dbl&gt;, RushYds &lt;dbl&gt;, RushYA &lt;dbl&gt;, RushTD &lt;dbl&gt;, TotalPlays &lt;dbl&gt;,\n#   TotalYds &lt;dbl&gt;, TotalAvg &lt;dbl&gt;, FGA &lt;dbl&gt;, FGM &lt;dbl&gt;, XPA &lt;dbl&gt;, XPM &lt;dbl&gt;,\n#   Punt &lt;dbl&gt;, PuntYds &lt;dbl&gt;, FirstDownPass &lt;dbl&gt;, FirstDownRush &lt;dbl&gt;,\n#   FirstDownPen &lt;dbl&gt;, FirstDown &lt;dbl&gt;, Penalties &lt;dbl&gt;, PenaltyYds &lt;dbl&gt;, …\n\n\nCode\nseason25 %&gt;%\n  filter(Team %in% big_ten_teams)\n\n\n# A tibble: 91 × 77\n      Rk   Gtm Date       Location Opponent       Result Points PointsOpp OT   \n   &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;   &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;\n 1     1     1 2025-08-30 &lt;NA&gt;     Old Dominion   W          27        14 &lt;NA&gt; \n 2     2     2 2025-09-06 &lt;NA&gt;     Kennesaw State W          56         9 &lt;NA&gt; \n 3     3     3 2025-09-12 &lt;NA&gt;     Indiana St.    W          73         0 &lt;NA&gt; \n 4     4     4 2025-09-20 &lt;NA&gt;     Illinois       W          63        10 &lt;NA&gt; \n 5     5     5 2025-09-27 @        Iowa           W          20        15 &lt;NA&gt; \n 6     1     1 2025-08-30 &lt;NA&gt;     Texas          W          14         7 &lt;NA&gt; \n 7     2     2 2025-09-06 &lt;NA&gt;     Grambling      W          70         0 &lt;NA&gt; \n 8     3     3 2025-09-13 &lt;NA&gt;     Ohio           W          37         9 &lt;NA&gt; \n 9     4     4 2025-09-27 @        Washington     W          24         6 &lt;NA&gt; \n10     5     5 2025-10-04 &lt;NA&gt;     Minnesota      W          42         3 &lt;NA&gt; \n# ℹ 81 more rows\n# ℹ 68 more variables: PassCmp &lt;dbl&gt;, PassAtt &lt;dbl&gt;, PassPct &lt;dbl&gt;,\n#   PassYds &lt;dbl&gt;, PassTD &lt;dbl&gt;, PassYA &lt;dbl&gt;, PassAYA &lt;dbl&gt;, PassRate &lt;dbl&gt;,\n#   RushAtt &lt;dbl&gt;, RushYds &lt;dbl&gt;, RushYA &lt;dbl&gt;, RushTD &lt;dbl&gt;, TotalPlays &lt;dbl&gt;,\n#   TotalYds &lt;dbl&gt;, TotalAvg &lt;dbl&gt;, FGA &lt;dbl&gt;, FGM &lt;dbl&gt;, XPA &lt;dbl&gt;, XPM &lt;dbl&gt;,\n#   Punt &lt;dbl&gt;, PuntYds &lt;dbl&gt;, FirstDownPass &lt;dbl&gt;, FirstDownRush &lt;dbl&gt;,\n#   FirstDownPen &lt;dbl&gt;, FirstDown &lt;dbl&gt;, Penalties &lt;dbl&gt;, PenaltyYds &lt;dbl&gt;, …\n\n\nNext, I calculated the average number of offensive plays per game for each Big Ten team in both the 2024 and 2025 seasons. This involved grouping the filtered data by team and taking the mean of the total plays, while making sure to ignore any missing values.\n\n\nCode\navg_plays_24 &lt;- season24 %&gt;% \n  filter(Team %in% big_ten_teams) %&gt;%\n  group_by(Team) %&gt;%\n  summarise(avg_plays = mean(TotalPlays, na.rm = TRUE))\n\navg_plays_25 &lt;- season25 %&gt;%\n  filter(Team %in% big_ten_teams) %&gt;%\n  group_by(Team) %&gt;%\n  summarise(avg_plays = mean(TotalPlays, na.rm = TRUE))\n\n\nIn this step, I created a horizontal bar chart to show the average number of offensive plays per game for each Big Ten team in the 2024 and 2025 seasons. By reordering the teams based on their average plays, I made it easier to compare teams at a glance. Flipping the coordinates with coord_flip() helped keep team names readable, especially with a long list of 18 teams. I also applied a clean theme and added axis labels and a title to make the chart easier to interpret. Overall, this visualization gives a clear snapshot of offensive tempo across the conference in both seasons.\n\n\nCode\nggplot() + \n  geom_bar(\n    data = avg_plays_24, \n    aes(x = reorder(Team, avg_plays),\n        weight = avg_plays),\n    fill = \"steelblue\") + \n  scale_y_continuous(labels = scales::comma) + \n  labs(\n    title = \"Big Ten Teams’ Average Offensive Plays Per Game (2024 Season)\",\n    x = \"Team\", \n    y = \"Average Plays\") + \n  theme_light() + \n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data = avg_plays_25, \n    aes(x = reorder(Team, avg_plays),\n        weight = avg_plays),\n    fill = \"steelblue\") + \n  scale_y_continuous(labels = scales::comma) + \n  labs(\n    title = \"Big Ten Teams’ Average Offensive Plays Per Game (2025 Season)\",\n    x = \"Team\", \n    y = \"Average Plays\") + \n  theme_light() + \n  coord_flip()\n\n\n\n\n\n\n\n\n\nBig Ten teams are running slightly more offensive plays on average in the 2025 season compared to 2024, indicating a modest increase in tempo across the conference. Several teams have seen significant changes in their rankings for average plays per game. Most notably, Purdue jumped from last place in 2024 to third in 2025, while Indiana climbed from ninth to second, and Rutgers moved into the top spot after finishing second the previous year. On the other hand, Maryland, which led the conference in 2024, dropped to fifth, and Ohio State fell from 14th to last place. Other teams like USC, Penn State, and Wisconsin also dropped in the rankings, while Nebraska and Oregon remained consistently near the top. Overall, the data suggests a shift in offensive strategies for some programs, with a few accelerating their pace of play while others have slowed down."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/volleyball-waffle/index.html",
    "href": "posts/volleyball-waffle/index.html",
    "title": "What scores the points? Kills, Blocks, Aces, or Defensive Errors",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(waffle)\n\nmatches &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_matchstats_2025.csv\")\n\n\nRows: 4878 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): team, opponent, home_away, result\ndbl  (33): ncaa_id, team_score, opponent_score, s, kills, errors, total_atta...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nmd &lt;- matches %&gt;%\n  filter(team==\"Maryland\") %&gt;%\n  summarise(\n    total_kills = sum(kills),\n    total_blocks = sum(block_solos+block_assists),\n    total_aces = sum(aces),\n    opp_errors = sum(defensive_errors)\n  )\n\n\n\n\nCode\nmd &lt;- c(\"Kills\"=525, \"Blocks\"=216, \"Aces\"=72, \"Errors\"=257)\n\n\n\n\nCode\nwaffle(\n        md/3, \n        rows = 10, \n        title=\"Maryland's Offense\", \n        xlab=\"1 square = 1 point\", \n        colors = c(\"black\", \"red\",\"snow2\",\"gold\")\n)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\nℹ The deprecated feature was likely used in the waffle package.\n  Please report the issue to the authors.\n\n\n\n\n\n\n\n\n\n\n\nCode\nps &lt;- matches %&gt;%\n  filter(team==\"Penn St.\") %&gt;%\n  summarise(\n    total_kills = sum(kills),\n    total_blocks = sum(block_solos+block_assists),\n    total_aces = sum(aces),\n    opp_errors = sum(defensive_errors)\n  )\n\n\n\n\nCode\nps &lt;- c(\"Kills\"=821, \"Blocks\"=234, \"Aces\"=84, \"Errors\"=286)\n\n\n\n\nCode\niron(\n  waffle(\n        md/3, \n        rows = 10, \n        title=\"Maryland's Offense\", \n        xlab=\"1 square = 1 point\", \n        colors = c(\"black\", \"red\",\"snow3\",\"gold\",\"white\")\n        ),\n  waffle(\n        ps/3, \n        rows = 10, \n        title=\"Penn State's Offense\", \n        xlab=\"1 square = 1 point\", \n        colors = c(\"navy\", \"snow3\",\"grey40\",\"slategray1\")\n        )\n)\n\n\n\n\n\n\n\n\n\nMaryland scores the majority of their points through kills and opponent errors, with blocks also contributing a notable share. Their biggest area for improvement is serving, as aces make up only a small portion of their points. Nearly half of Maryland’s total points this season have come from kills, indicating a strong offensive approach but limited scoring variety.\nPenn State, on the other hand, completely outpaces Maryland — they have more points from kills alone than Maryland has from kills, blocks, and nearly all aces combined. Both teams under-perform in aces, which is typical at the Division I level, but Penn State benefits more from forcing opponent errors, suggesting stronger serves or defensive pressure.\nThese differences raise important questions about each team’s performance. Maryland’s lower number of kills may reflect challenges with offensive efficiency or setting consistency, while Penn State’s higher opponent errors could indicate stronger serving or more effective defensive pressure."
  }
]